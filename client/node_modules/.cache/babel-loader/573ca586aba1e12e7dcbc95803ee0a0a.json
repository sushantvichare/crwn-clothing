{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sushant\\\\Documents\\\\crwn-clothing\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from '../form-input/form-input.component.jsx';\nimport CustomButton from '../custom-button/custom-button.component.jsx';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user-actions';\nimport './sign-in.styles.scss';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  _s();\n\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I already have a account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        handleChange: handleChange,\n        name: \"email\",\n        type: \"email\",\n        value: email,\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        handleChange: handleChange,\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: handleSubmit,\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \"Sign In With Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SignIn, \"SnsEHIESzo772eYzJRrBZvxMw/o=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/sushant/Documents/crwn-clothing/crwn-clothing/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAOC,OAAP,QAAqB,aAArB;AAGA,OAAOC,SAAP,MAAsB,wCAAtB;AACA,OAAOC,YAAP,MAAyB,8CAAzB;AAEA,SAAQC,iBAAR,EAA0BC,gBAA1B,QAAiD,+BAAjD;AAEA,OAAO,uBAAP;;AAEA,MAAMC,MAAM,GAAC,CAAC;AAACD,EAAAA,gBAAD;AAAkBD,EAAAA;AAAlB,CAAD,KAAyC;AAAA;;AACpD,QAAK,CAACG,eAAD,EAAiBC,cAAjB,IAAiCR,QAAQ,CAAC;AAACS,IAAAA,KAAK,EAAC,EAAP;AAAUC,IAAAA,QAAQ,EAAC;AAAnB,GAAD,CAA9C;AAEA,QAAK;AAACD,IAAAA,KAAD;AAAOC,IAAAA;AAAP,MAAiBH,eAAtB;;AACA,QAAMI,YAAY,GAAC,MAAMC,KAAN,IAAa;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AAGAR,IAAAA,gBAAgB,CAACI,KAAD,EAAOC,QAAP,CAAhB;AACD,GALD;;AAOA,QAAMI,YAAY,GAAEF,KAAD,IAAS;AAC1B,UAAK;AAACG,MAAAA,KAAD;AAAOC,MAAAA;AAAP,QAAaJ,KAAK,CAACK,MAAxB;AAEAT,IAAAA,cAAc,CAAC,EAAC,GAAGD,eAAJ;AAAoB,OAACS,IAAD,GAAOD;AAA3B,KAAD,CAAd;AACD,GAJD;;AASE,sBAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAM,MAAA,QAAQ,EAAEJ,YAAhB;AAAA,8BAEE,QAAC,SAAD;AAAW,QAAA,YAAY,EAAEG,YAAzB;AAAuC,QAAA,IAAI,EAAC,OAA5C;AAAoD,QAAA,IAAI,EAAC,OAAzD;AAAiE,QAAA,KAAK,EAAEL,KAAxE;AAA+E,QAAA,KAAK,EAAC,OAArF;AAA6F,QAAA,QAAQ;AAArG;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE,QAAC,SAAD;AAAW,QAAA,YAAY,EAAEK,YAAzB;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAEJ,QAHT;AAIE,QAAA,KAAK,EAAC,UAJR;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,cAJF,eAYE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACA,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAA4B,UAAA,OAAO,EAAEC,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAA4B,UAAA,OAAO,EAAEP,iBAArC;AAAwD,UAAA,cAAc,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AA0BH,CA9CD;;GAAME,M;;KAAAA,M;;AAgDN,MAAMY,kBAAkB,GAAGC,QAAQ,KAAG;AACpCf,EAAAA,iBAAiB,EAAC,MAAIe,QAAQ,CAACf,iBAAiB,EAAlB,CADM;AAEpCC,EAAAA,gBAAgB,EAAC,CAACI,KAAD,EAAOC,QAAP,KAAkBS,QAAQ,CAACd,gBAAgB,CAAC;AAACI,IAAAA,KAAD;AAAOC,IAAAA;AAAP,GAAD,CAAjB;AAFP,CAAH,CAAnC;;AAKA,eAAgBT,OAAO,CAAC,IAAD,EAAMiB,kBAAN,CAAP,CAAiCZ,MAAjC,CAAhB","sourcesContent":["import React,{useState} from \"react\";\r\nimport{connect} from \"react-redux\";\r\n\r\n\r\nimport FormInput from '../form-input/form-input.component.jsx';\r\nimport CustomButton from '../custom-button/custom-button.component.jsx';\r\n\r\nimport {googleSignInStart,emailSignInStart} from '../../redux/user/user-actions';\r\n\r\nimport './sign-in.styles.scss'\r\n\r\nconst SignIn=({emailSignInStart,googleSignInStart})=> {\r\n  const[userCredentials,setCredentials]=useState({email:'',password:'',})\r\n\r\n  const{email,password}=userCredentials;\r\n  const handleSubmit=async event=>{\r\n    event.preventDefault();\r\n   \r\n   \r\n    emailSignInStart(email,password);\r\n  }\r\n\r\n  const handleChange=(event)=>{\r\n    const{value,name}=event.target;\r\n\r\n    setCredentials({...userCredentials,[name]:value})\r\n  }\r\n\r\n  \r\n  \r\n    \r\n    return (\r\n\r\n      <div className=\"sign-in\">\r\n        <h2>I already have a account</h2>\r\n        <span>Sign in with your email and password</span>\r\n        <form onSubmit={handleSubmit}>\r\n          \r\n          <FormInput handleChange={handleChange} name=\"email\" type=\"email\" value={email} label=\"Email\" required />\r\n          \r\n          <FormInput handleChange={handleChange}\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            label=\"Password\"\r\n            required\r\n          />\r\n          \r\n          <div className='buttons'>\r\n          <CustomButton type='button' onClick={handleSubmit}>Sign In</CustomButton>\r\n          <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>Sign In With Google</CustomButton>\r\n          </div>\r\n          \r\n        </form>\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nconst mapDispatchToProps = dispatch=>({\r\n  googleSignInStart:()=>dispatch(googleSignInStart()),\r\n  emailSignInStart:(email,password)=>dispatch(emailSignInStart({email,password}))\r\n})\r\n\r\nexport default  connect(null,mapDispatchToProps)(SignIn);\r\n "]},"metadata":{},"sourceType":"module"}